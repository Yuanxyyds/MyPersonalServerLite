Index: landSink/apps.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.apps import AppConfig\n\n\nclass LandsinkConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"landSink\"\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/landSink/apps.py b/landSink/apps.py
--- a/landSink/apps.py	(revision 89dc42f2f23fbe1ec6c12795c27ea4ee582cc2f7)
+++ b/landSink/apps.py	(date 1690531801885)
@@ -1,6 +1,11 @@
 from django.apps import AppConfig
 
 
-class LandsinkConfig(AppConfig):
+class LandSinkConfig(AppConfig):
     default_auto_field = "django.db.models.BigAutoField"
     name = "landSink"
+
+    def ready(self):
+        # Import the necessary model and call the build_models() function here
+        from landSink import model
+        model.build_models()
Index: CSC110PredictLandSink/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\nDjango settings for CSC110PredictLandSink project.\n\nGenerated by 'django-admin startproject' using Django 4.1.3.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.1/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/4.1/ref/settings/\n\"\"\"\n\nfrom pathlib import Path\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-n2=gwt-(7%^@6*8_5w9_v5%uol1ajfzft8f9)etrf($w*#6t&k\"\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = ['18.224.212.119']\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n]\n\nMIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\n\nROOT_URLCONF = \"CSC110PredictLandSink.urls\"\n\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",\n                \"django.contrib.messages.context_processors.messages\",\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = \"CSC110PredictLandSink.wsgi.application\"\n\n\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\n\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.NumericPasswordValidator\",\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/4.1/topics/i18n/\n\nLANGUAGE_CODE = \"en-us\"\n\nTIME_ZONE = \"UTC\"\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\n\nSTATIC_URL = \"static/\"\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CSC110PredictLandSink/settings.py b/CSC110PredictLandSink/settings.py
--- a/CSC110PredictLandSink/settings.py	(revision 89dc42f2f23fbe1ec6c12795c27ea4ee582cc2f7)
+++ b/CSC110PredictLandSink/settings.py	(date 1690532204512)
@@ -15,7 +15,6 @@
 # Build paths inside the project like this: BASE_DIR / 'subdir'.
 BASE_DIR = Path(__file__).resolve().parent.parent
 
-
 # Quick-start development settings - unsuitable for production
 # See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/
 
@@ -25,8 +24,7 @@
 # SECURITY WARNING: don't run with debug turned on in production!
 DEBUG = True
 
-ALLOWED_HOSTS = ['18.224.212.119']
-
+ALLOWED_HOSTS = ['18.224.212.119', '127.0.0.1']
 
 # Application definition
 
@@ -37,6 +35,7 @@
     "django.contrib.sessions",
     "django.contrib.messages",
     "django.contrib.staticfiles",
+    'landSink',
 ]
 
 MIDDLEWARE = [
@@ -69,7 +68,6 @@
 
 WSGI_APPLICATION = "CSC110PredictLandSink.wsgi.application"
 
-
 # Database
 # https://docs.djangoproject.com/en/4.1/ref/settings/#databases
 
@@ -80,7 +78,6 @@
     }
 }
 
-
 # Password validation
 # https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators
 
@@ -99,7 +96,6 @@
     },
 ]
 
-
 # Internationalization
 # https://docs.djangoproject.com/en/4.1/topics/i18n/
 
@@ -111,7 +107,6 @@
 
 USE_TZ = True
 
-
 # Static files (CSS, JavaScript, Images)
 # https://docs.djangoproject.com/en/4.1/howto/static-files/
 
Index: landSink/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\nInstructions (READ THIS FIRST!)\n===============================\nRead the comments and comment/uncomment specific lines to choose\nwhat part of the program intended to run.\n\nCopyright and Usage Information\n===============================\n\nThis program is provided solely for the personal and private use of teachers and TAs\nchecking and grading the CSC110 project at the University of Toronto St. George campus. All forms of\ndistribution of this code, whether as given or with any changes, are\nexpressly prohibited.\n\nThis file is Copyright (c) 2020 Alex Lin, Steven Liu, Haitao Zeng, William Zhang.\n\"\"\"\nfrom django.http import HttpResponse\nfrom django.shortcuts import render\n\nimport json\nfrom pyecharts.charts import Map\nfrom pyecharts import options\nfrom landSink import model\n\n\ndef processing(request, year: int) -> HttpResponse:\n    \"\"\"\n    the main function to accept data form user typing.\n    \"\"\"\n    model.build_models()\n    temp = model.year_to_tem(year)\n    eve = model.tem_to_sealevel(temp)\n    # draw the map.\n    return draw_map(eve)\n\n\ndef translation(sea_level_1: float) -> list:\n    \"\"\"\n    translate the information form txt.\n    \"\"\"\n    #  form txt input data.\n    f = open('landSink/data/map_data.txt', 'r')\n    js = f.read()\n    dic = json.loads(js)\n    realdata = {}\n\n    # change the data format into what pyecharts need to draw.\n    for data in dic['data']:\n        name = data['name']\n        ele = data['avg_ele']\n\n        #  There are 2 country which has error in translating data,\n        #  so this if statement is to fix them.\n        for c in name:\n            if c == '么':\n                name = \"Côte d'Ivoire\"\n            if c == '茅':\n                name = \"São Tomé and Principe\"\n\n        # There are 2 country which ele is 0, we assume whenever time goes,\n        # these country will sunk immediately.\n        if float(ele) != 0:\n            realdata[name] = min(100.0, round(sea_level_1 / float(ele) * 100, 4))\n        else:\n            realdata[name] = 100\n\n    #  change the realdata into what pyecharts need.\n    return list(realdata.items())\n\n\ndef draw_map(sea_level_2: float) -> HttpResponse:\n    \"\"\"5\n    set the map setting and draw the map.\n    \"\"\"\n    element = translation(sea_level_2)\n    sunk_map = Map(options.InitOpts(bg_color=\"#87CEFA\", page_title='sunk percentage map')). \\\n        add(series_name=\"Sunk Rate of Country in %\",\n            data_pair=element,\n            is_map_symbol_show=False,\n            maptype='world',\n            layout_size=150\n            )\n\n    #  set different color to different danger level.\n    sunk_map.set_global_opts(\n        visualmap_opts=options.VisualMapOpts(max_=1100000, is_piecewise=True, pieces=[\n            {\"min\": 96},\n            {\"min\": 72.9, \"max\": 95.999},\n            {\"min\": 50.4, \"max\": 72.899},\n            {\"min\": 27.8, \"max\": 50.399},\n            {\"min\": 5.001, \"max\": 27.799},\n            {\"max\": 5}, ]))\n\n    #  set Map data format.\n    sunk_map.set_series_opts(label_opts=options.LabelOpts(is_show=False))  # set country divisible\n    return HttpResponse(sunk_map.render_embed())\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/landSink/views.py b/landSink/views.py
--- a/landSink/views.py	(revision 89dc42f2f23fbe1ec6c12795c27ea4ee582cc2f7)
+++ b/landSink/views.py	(date 1690532239884)
@@ -27,7 +27,6 @@
     """
     the main function to accept data form user typing.
     """
-    model.build_models()
     temp = model.year_to_tem(year)
     eve = model.tem_to_sealevel(temp)
     # draw the map.
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"05e02c31-9139-49cc-93dc-016728d68a1c\" name=\"Changes\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/CSC110PredictLandSink/settings.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CSC110PredictLandSink/settings.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2TBfzbZkSQ6ZAlOYLGveYM0IvU8\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"dart.analysis.tool.window.visible\": \"false\",\n    \"last_opened_file_path\": \"/Users/liustev6/Documents/Github/CSC110PredictLandSink\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/landSink\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"manage\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"CSC110PredictLandSink\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/manage.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python.manage\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"05e02c31-9139-49cc-93dc-016728d68a1c\" name=\"Changes\" comment=\"\" />\n      <created>1690521658939</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1690521658939</updated>\n      <workItem from=\"1690521660222\" duration=\"6789000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/CSC110PredictLandSink$manage.coverage\" NAME=\"manage Coverage Results\" MODIFIED=\"1690523905659\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n    <SUITE FILE_PATH=\"coverage/CSC110PredictLandSink$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1690521840266\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 89dc42f2f23fbe1ec6c12795c27ea4ee582cc2f7)
+++ b/.idea/workspace.xml	(date 1690532133430)
@@ -7,6 +7,10 @@
     <list default="true" id="05e02c31-9139-49cc-93dc-016728d68a1c" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/CSC110PredictLandSink/settings.py" beforeDir="false" afterPath="$PROJECT_DIR$/CSC110PredictLandSink/settings.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/landSink/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/landSink/__init__.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/landSink/apps.py" beforeDir="false" afterPath="$PROJECT_DIR$/landSink/apps.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/landSink/model.py" beforeDir="false" afterPath="$PROJECT_DIR$/landSink/model.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/landSink/views.py" beforeDir="false" afterPath="$PROJECT_DIR$/landSink/views.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -87,7 +91,7 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1690521658939</updated>
-      <workItem from="1690521660222" duration="6789000" />
+      <workItem from="1690521660222" duration="8694000" />
     </task>
     <servers />
   </component>
@@ -99,7 +103,19 @@
       <map>
         <entry key="MAIN">
           <value>
-            <State />
+            <State>
+              <option name="FILTERS">
+                <map>
+                  <entry key="branch">
+                    <value>
+                      <list>
+                        <option value="main" />
+                      </list>
+                    </value>
+                  </entry>
+                </map>
+              </option>
+            </State>
           </value>
         </entry>
       </map>
